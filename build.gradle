///////////////////////////////////////////////////////////////////////////////
//
// Build Script for building JavaPOS Device Controls Library
//
// Author: denis.kuniss@wincor-nixdorf.com (2016)
//
///////////////////////////////////////////////////////////////////////////////

plugins {
	id 'java'
	id 'eclipse'
//  id 'maven' // comment this in and the next line out for populating to a local Maven repository for testing purposes
    id 'com.github.oehme.sobula.bintray-release' version '0.6.7'
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.11'
}


///////////////////////////////////////////////////////////////////////////////
// Names and Versions
///////////////////////////////////////////////////////////////////////////////

def artifactName = 'javapos-controls'
def groupId='org.javapos'
def uposVersion = '1.6'
def version="${uposVersion}.0" // the last part after dot is the build/release version


///////////////////////////////////////////////////////////////////////////////
// Build Dependencies
///////////////////////////////////////////////////////////////////////////////

repositories {
    jcenter()
    if (project.plugins.hasPlugin('maven')) 
    { // evaluates only at development environment, not at travis-ci.org
	    maven {
	        url "file:$localTestFileRepositoryDir"
	    }
	}
}

dependencies {
    compile 'org.javapos:javapos-contracts:0.1.12' // for testing purposes
    compile "org.javapos:javapos-config-loader:0.0.3"  //  for testing purposes

//	compile "org.javapos:javapos-contracts:$uposVersion.+" // for production, later on
//	compile "org.javapos:javapos-config-loader:2.2.0"  // for production, later on
}


///////////////////////////////////////////////////////////////////////////////
// Build Tasks
///////////////////////////////////////////////////////////////////////////////

sourceCompatibility = '1.5' // this defines the lowest JVM version this library may be used with

// this is to request the best matching JDK (currently 1.5) for compiling in Eclipse 
// it is recommended to install a JDK which matches best to avoid applying APIs methods and types not available in specified JVM compatibility version  
eclipse.classpath {
	containers.clear()
	containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-$sourceCompatibility"
}

jar {
	baseName = artifactName
	manifest {
        attributes('Specification-Title': 'UnifiedPOS Standard',
				   'Specification-Vendor': 'UnifiedPOS Committee',
                   'Specification-Version': uposVersion,
                   'Implementation-Title': 'JavaPOS Device Controls',
				   'Implementation-Vendor': 'github.com/JavaPOSWorkingGroup',
                   'Implementation-Version': version)
    }
}


///////////////////////////////////////////////////////////////////////////////
// Artifact Upload
///////////////////////////////////////////////////////////////////////////////

if (project.plugins.hasPlugin('com.github.oehme.sobula.bintray-release')) 
{ // evaluates only on travis-ci.org for releasing

    group = "org.javapos"
    description = "JavaPOS Device Controls Library"
     
    contacts {
        "builder@javapos.org" {
            moniker "JavaPOS Working Group"
            roles "owner"
            github "JavaPOSWorkingGroup"
        }
    }
    
    bintray.user = "javaposworkinggroup"
    bintray.pkg.version.mavenCentralSync.user = "kuniss"
}

if (project.plugins.hasPlugin('maven')) 
{ // evaluates only at development environment, not at travis-ci.org

	artifacts {
		archives jar
	}
	
	uploadArchives {
	    repositories {
	        mavenDeployer {
	            repository(url: "file:$localTestFileRepositoryDir")
	            pom.artifactId = artifactName
	            pom.groupId = groupId
	            pom.version = version
	        }
	    }
	}
}


///////////////////////////////////////////////////////////////////////////////
// Source Import
///////////////////////////////////////////////////////////////////////////////

// The following is for importing the source code initially; it does not take 
// part of a release build
  
if (project.hasProperty('javaposImportDir')) 
{ // evaluate only at development environment, not at travis-ci.org

	// javaposImportDir must be defined in the gradle.properties file
	def javaposSourceZipFile ="$javaposImportDir/JavaPOS-$uposVersion-Source-20010529.zip"
	
	task importSources {
		description = 'Copies the sources from an official JavaPOS source distribution archive into this projectout of the current version of the project.'
		
		doLast {
			assert file(javaposSourceZipFile).exists(), "import archive '$javaposSourceZipFile' does not exist"
			copy {
				from (zipTree(javaposSourceZipFile)) {
					exclude 'jpos/services/**'
					exclude 'jpos/events/**'
					exclude 'jpos/*Const.java'
					exclude 'jpos/JposException.java'
					exclude 'jpos/BaseControl.java'
					exclude 'jpos/*Control1?.java' 
	
					exclude '**/*.stub' // will be copied later on to src/main/resources, see below
				}
				into "src/main/java"
			}
			copy {
				includeEmptyDirs = false
				from (zipTree(javaposSourceZipFile)) {
					include '**/*.stub'
				}
				into "src/main/resources"
			}
		}
	}
}

/**
 * Helper method: Prepends given header to the content of the given file and writes the file back.
 */
private void prependToFile(File file, String header) {
	String contents = file.getText() 

	BufferedWriter writer = new BufferedWriter(new FileWriter(file))
	writer.write(header)
	writer.write(contents)
	writer.close()
}


task addLicenseHeader << {
	sourceSets.main.java.each { 
		prependToFile(it, 
'''\
//////////////////////////////////////////////////////////////////////
//
// The JavaPOS library source code is now under the CPL license, which 
// is an OSS Apache-like license. The complete license is located at:
//    http://www.ibm.com/developerworks/library/os-cpl.html
//
//////////////////////////////////////////////////////////////////////
''')
		logger.info "added license header to source file '${it}'." 
	}
}