///////////////////////////////////////////////////////////////////////////////
//
// Build Script for building JavaPOS Device Controls Library
//
// Author: denis.kuniss@wincor-nixdorf.com (2016)
//
///////////////////////////////////////////////////////////////////////////////

plugins {
    id 'com.gradle.build-scan' version '3.1.1'
	id 'java'
	id 'eclipse'
//  id 'maven' // comment this in and the next line out for populating to a local Maven repository for testing purposes
    id 'com.github.oehme.sobula.bintray-release' version '0.6.7'
}

ext.githubProjectUrl = 'https://github.com/JavaPOSWorkingGroup/javapos-controls'
ext.travisProjectUrl = 'https://travis-ci.org/JavaPOSWorkingGroup/javapos-controls'

buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"

	apply from: 'buildScan.gradle'
}

wrapper {
	gradleVersion = '5.6.1'
}


///////////////////////////////////////////////////////////////////////////////
// Names and Versions
///////////////////////////////////////////////////////////////////////////////

def artifactName = 'javapos-controls'
def groupId='org.javapos'
def uposVersion = '1.14'
version="${uposVersion}.1" // the last part after dot is the build/release version

// dependency versions
def javaposContractsVersion = "$uposVersion.3"


///////////////////////////////////////////////////////////////////////////////
// Build Dependencies
///////////////////////////////////////////////////////////////////////////////

repositories {
    jcenter()
    if (project.plugins.hasPlugin('maven')) 
    { // evaluates only at development environment, not at travis-ci.org
	    maven {
	        url "file:$localTestFileRepositoryDir"
	    }
	}
}

dependencies {
	compile "org.javapos:javapos-contracts:$javaposContractsVersion"
	compile "org.javapos:javapos-config-loader:2.2.0"
	
	testCompile "junit:junit:4.+"
    testCompile "org.hamcrest:hamcrest-library:1.3"
}


///////////////////////////////////////////////////////////////////////////////
// Build Tasks
///////////////////////////////////////////////////////////////////////////////

// when running on travis-ci.org, always the environment variable TRAVIS is set
def boolean isRunningOnBuildServer = System.getenv('TRAVIS')

if (isRunningOnBuildServer) {
	sourceCompatibility = '1.5' // this defines the lowest JVM version this library may be used with
	
	// this is to request the best matching JDK (currently 1.5) for compiling in Eclipse 
	// it is recommended to install a JDK which matches best to avoid applying APIs methods and types not available in specified JVM compatibility version  
	eclipse.classpath {
		containers.clear()
		containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-$sourceCompatibility"
	}
}
else { // to be compliant to javapos-contracts during library development in Eclipse 
	sourceCompatibility = '1.8' 
}

def javaposManifest = 	manifest {
        attributes('Specification-Title': 'UnifiedPOS Standard',
				   'Specification-Vendor': 'UnifiedPOS Committee',
                   'Specification-Version': uposVersion,
                   'Implementation-Title': 'JavaPOS Device Controls',
				   'Implementation-Vendor': 'github.com/JavaPOSWorkingGroup',
                   'Implementation-Version': version)
}

jar {
	baseName = artifactName
	manifest = javaposManifest
}

sourceJar {
	manifest = javaposManifest
}


///////////////////////////////////////////////////////////////////////////////
// Artifact Upload
///////////////////////////////////////////////////////////////////////////////

if (project.plugins.hasPlugin('com.github.oehme.sobula.bintray-release')) 
{ // evaluates only on travis-ci.org for releasing

    group = "org.javapos"
    description = "JavaPOS Device Controls Library"
     
    contacts {
        "builder@javapos.org" {
            moniker "JavaPOS Working Group"
            roles "owner"
            github "JavaPOSWorkingGroup"
        }
    }
    
    bintray.user = "javaposworkinggroup"
    bintray.pkg.version.mavenCentralSync.user = "kuniss"
}

if (project.plugins.hasPlugin('maven')) 
{ // evaluates only at development environment, not at travis-ci.org

	artifacts {
		archives jar
	}
	
	uploadArchives {
	    repositories {
	        mavenDeployer {
	            repository(url: "file:$localTestFileRepositoryDir")
	            pom.artifactId = artifactName
	            pom.groupId = groupId
	            pom.version = version
	        }
	    }
	}
}

